import java.util.*;
public class java {
    public static int[] RemoveDuplicates(int nums[]){
        HashSet<Integer> set = new HashSet<>();
        for(int i=0; i<nums.length; i++){
            if(!set.contains(nums[i])){
                set.add(nums[i]);
            }
        }
        int  i=0;
        int[] arr = new int[set.size()];
        for(int num: set){
            arr[i++] = num;
        }
        return arr;
    }
    public static void MoveZeros(int[] nums){
        int count = 0;
        for(int i=0; i<nums.length; i++){
            if(nums[i]!=0){
                nums[count++] = nums[i];
            }
        }
        while(count<nums.length){
            nums[count++] = 0;
        }
    }
    public static void reverse(int[] nums, int start, int end){
        while(start<end){
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start++;
            end--;
        }
    }
    public static void rotateArray(int nums[], int k){
        reverse(nums,0,nums.length-1);
        reverse(nums,0,k);
        reverse(nums,k+1,nums.length-1);
        printArray(nums);
    }
    public static void printArray(int nums[]){
        System.out.print("Array Elements: ");
        for(int i=0; i<nums.length; i++){
            System.out.print(nums[i]+" ");
        }
        System.out.println();
    }
    public static int missingNum(int[] nums){
        int n = nums.length;
        int count = (n*(n+1))/2;
        
        for(int i: nums){
            count = count-i;
        }
        return count;
    }
    public static void swap(int[] nums, int i, int j){
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
    public static int firstMissingPositive(int[] nums) {
        int n = nums.length;
        for(int i=0; i<nums.length; i++){
            while(nums[i]>0 && nums[i]<=n && nums[i] != nums[nums[i]-1]){
                swap(nums,i,nums[i]-1);
            }
        }
        for(int i=0;i<n; i++){
            if(nums[i]!=i+1){
                return i+1;
            }
        }
        return n+1;
    }
    public static void leader(int[] nums, ArrayList<Integer> leaders){
        for(int i=0; i<nums.length; i++){
            int j;
            for(j=i+1; j<nums.length; j++){
                if(nums[i]<nums[j]){
                    break;
                }
            }
            if(j==nums.length){
                leaders.add(nums[i]);
            }
        }
    }
    public static void main(String[] args) {
        int[] nums = {3,0,1,2,5};
        int[] res = RemoveDuplicates(nums);
        printArray(res);
        MoveZeros(nums);
        printArray(nums);
        rotateArray(nums,2);
        System.out.println(missingNum(nums));
        int[] nums1 = {-1,-3,1,2,4,5};
        System.out.println(firstMissingPositive(nums1));

        int[] arr = { 16, 17, 4, 3, 5, 2 };
        ArrayList<Integer> result = new ArrayList<>();
        leader(arr,result);
        for(int i: result){
            System.out.print(i+" ");
        }

    }
}


OutPut:
Array Elements: 0 1 2 3 5
Array Elements: 3 1 2 5 0
Array Elements: 2 5 0 3 1
4
3
17 5 2
